{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortBy","NONE","reset","setState","startListView","this","visibleGoods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,2EAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,kBAAAA,E,gBAAAA,E,mBAAAA,M,KAaE,IAAME,EAAb,4MACEC,MAAe,CACbC,WAAW,EACXC,YAAY,EACZC,OAAQN,EAASO,MAJrB,EAOEC,MAAQ,WACN,EAAKC,SAAS,CACZJ,YAAY,EACZC,OAAQN,EAASO,QAVvB,EAcEG,cAAgB,WACd,EAAKD,UAAS,SAACN,GAAD,MAAY,CAAEC,WAAYD,EAAMC,eAflD,4CAkBE,WAAU,IAAD,OACP,EAA0CO,KAAKR,MAAvCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,OACzBM,EAAY,UAAOX,GAiBzB,OAfAW,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKN,EAASgB,QACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITd,GACFO,EAAaQ,UAIb,qBAAKC,UAAU,MAAf,SACGjB,EAEG,qCACE,sBAAKiB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,uDAKVE,QAAS,kBAAM,EAAKd,SAAS,CAAEH,OAAQN,EAASgB,WAPlD,iCAYA,wBACEM,KAAK,SACLD,UAAU,uDAKVE,QAAS,kBAAM,EAAKd,SAAS,CAAEH,OAAQN,EAASkB,UAPlD,4BAYA,wBACEI,KAAK,SACLD,UAAU,wDAMVE,QAAS,kBAAM,EAAKd,SAAS,CAAEJ,YAAaA,KAR9C,qBAaA,wBACEiB,KAAK,SACLD,UAAU,wDAMVE,QAASZ,KAAKH,MARhB,sBAcF,oBACEa,UAAU,QADZ,SAGGT,EAAaY,KAAI,SAAAC,GAAI,OACpB,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,WASb,wBACEH,KAAK,SACLD,UAAU,uDAKVE,QAASZ,KAAKD,cAPhB,yBA7GZ,GAAyBgB,IAAMC,WC3B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.32007e35.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPABET = 'ALPABET',\n  LENGTH = 'LENGTH',\n  REVERSE = 'REVERSE',\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortBy: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isStarted: false,\n    isReversed: false,\n    sortBy: SortType.NONE,\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: SortType.NONE,\n    });\n  };\n\n  startListView = () => {\n    this.setState((state) => ({ isStarted: !state.isStarted }));\n  };\n\n  render() {\n    const { isStarted, isReversed, sortBy } = this.state;\n    const visibleGoods = [...goodsFromServer];\n\n    visibleGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.ALPABET:\n          return good1.localeCompare(good2);\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {isStarted\n          ? (\n            <>\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  className=\"button\n                  is-primary\n                  is-medium\n                  is-responsive\n                  is-focused\"\n                  onClick={() => this.setState({ sortBy: SortType.ALPABET })}\n                >\n                  Sort alphabetically\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"button\n                  is-primary\n                  is-medium\n                  is-responsive\n                  is-focused\"\n                  onClick={() => this.setState({ sortBy: SortType.LENGTH })}\n                >\n                  Sort by length\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"\n                  button\n                  is-primary\n                  is-medium\n                  is-responsive\n                  is-focused\"\n                  onClick={() => this.setState({ isReversed: !isReversed })}\n                >\n                  Reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"\n                  button\n                  is-primary\n                  is-medium\n                  is-responsive\n                  is-focused\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n              </div>\n\n              <ol\n                className=\"Goods\"\n              >\n                {visibleGoods.map(good => (\n                  <li\n                    className=\"Goods__item\"\n                    key={good}\n                  >\n                    {good}\n                  </li>\n                ))}\n              </ol>\n            </>\n          )\n          : (\n            <button\n              type=\"button\"\n              className=\"button\n              is-primary\n              is-medium\n              is-responsive\n              is-focused\"\n              onClick={this.startListView}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}