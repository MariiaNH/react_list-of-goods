{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","visibleGoods","sortGoods","sortBy","setState","newGoods","ALPABET","sort","good1","good2","localeCompare","LENGTH","length","REVERSE","reverse","reset","startListView","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,kBAAAA,E,gBAAAA,E,mBAAAA,M,KAYE,IAAME,EAAb,4MACEC,MAAe,CACbC,WAAW,EACXC,aAAcJ,GAHlB,EAMEK,UAAY,SAACC,GACX,EAAKC,UAAS,SAAAL,GACZ,IAAMM,EAAQ,YAAON,EAAME,cAE3B,OAAQE,GACN,KAAKP,EAASU,QACZD,EAASE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACpD,MAEF,KAAKb,EAASe,OACZN,EAASE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UACrD,MAEF,KAAKhB,EAASiB,QACZR,EAASS,UAOb,MAAO,CACLb,aAAcI,OA5BtB,EAiCEU,MAAQ,WACN,EAAKX,SAAS,CAAEH,aAAcJ,KAlClC,EAqCEmB,cAAgB,WACd,IAAQhB,EAAc,EAAKD,MAAnBC,UAEHA,GACH,EAAKI,UAAS,iBAAO,CAAEJ,WAAYA,OAzCzC,4CA6CE,WAAU,IAAD,OACP,EAAoCiB,KAAKlB,MAAjCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAEnB,OACE,qBAAKiB,UAAU,MAAf,SACGlB,EAEG,qCACE,sBAAKkB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,uDAKVE,QAAS,kBAAM,EAAKlB,UAAUN,EAASU,UAPzC,iCAYA,wBACEa,KAAK,SACLD,UAAU,uDAKVE,QAAS,kBAAM,EAAKlB,UAAUN,EAASe,SAPzC,4BAYA,wBACEQ,KAAK,SACLD,UAAU,wDAMVE,QAAS,kBAAM,EAAKlB,UAAUN,EAASiB,UARzC,qBAaA,wBACEM,KAAK,SACLD,UAAU,wDAMVE,QAASH,KAAKF,MARhB,sBAcF,oBACEG,UAAU,QADZ,SAGGjB,EAAaoB,KAAI,SAAAC,GAAI,OACpB,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,WASb,wBACEH,KAAK,SACLD,UAAU,uDAKVE,QAASH,KAAKD,cAPhB,yBAxHZ,GAAyBO,IAAMC,WC1B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.becd8454.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPABET = 'ALPABET',\n  LENGTH = 'LENGTH',\n  REVERSE = 'REVERSE',\n}\n\ntype State = {\n  isStarted: boolean,\n  visibleGoods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isStarted: false,\n    visibleGoods: goodsFromServer,\n  };\n\n  sortGoods = (sortBy: SortType) => {\n    this.setState(state => {\n      const newGoods = [...state.visibleGoods];\n\n      switch (sortBy) {\n        case SortType.ALPABET:\n          newGoods.sort((good1, good2) => good1.localeCompare(good2));\n          break;\n\n        case SortType.LENGTH:\n          newGoods.sort((good1, good2) => good1.length - good2.length);\n          break;\n\n        case SortType.REVERSE:\n          newGoods.reverse();\n          break;\n\n        default:\n          break;\n      }\n\n      return {\n        visibleGoods: newGoods,\n      };\n    });\n  };\n\n  reset = () => {\n    this.setState({ visibleGoods: goodsFromServer });\n  };\n\n  startListView = () => {\n    const { isStarted } = this.state;\n\n    if (!isStarted) {\n      this.setState(() => ({ isStarted: !isStarted }));\n    }\n  };\n\n  render() {\n    const { isStarted, visibleGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isStarted\n          ? (\n            <>\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  className=\"button\n                  is-primary\n                  is-medium\n                  is-responsive\n                  is-focused\"\n                  onClick={() => this.sortGoods(SortType.ALPABET)}\n                >\n                  Sort alphabetically\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"button\n                  is-primary\n                  is-medium\n                  is-responsive\n                  is-focused\"\n                  onClick={() => this.sortGoods(SortType.LENGTH)}\n                >\n                  Sort by length\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"\n                  button\n                  is-primary\n                  is-medium\n                  is-responsive\n                  is-focused\"\n                  onClick={() => this.sortGoods(SortType.REVERSE)}\n                >\n                  Reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"\n                  button\n                  is-primary\n                  is-medium\n                  is-responsive\n                  is-focused\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n              </div>\n\n              <ol\n                className=\"Goods\"\n              >\n                {visibleGoods.map(good => (\n                  <li\n                    className=\"Goods__item\"\n                    key={good}\n                  >\n                    {good}\n                  </li>\n                ))}\n              </ol>\n            </>\n          )\n          : (\n            <button\n              type=\"button\"\n              className=\"button\n              is-primary\n              is-medium\n              is-responsive\n              is-focused\"\n              onClick={this.startListView}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}